// made by BinaryWorlds
// Not for commercial use, in other case by free to use it.
// Just copy this text and link to oryginal repository:
// https://github.com/BinaryWorlds/ThermalPrinter

// I am not responsible for errors in the library. I deliver it "as it is".
// I will be grateful for all suggestions.

// Tested on firmware 2.69 and JP-QR701
// Some features may not work on the older firmware.

#include <Arduino.h>
#include <HardwareSerial.h>

#include "TPrinter.h"

const uint8_t bitmapWidth = 40;
const uint8_t bitmapHeight = 37;

// link to repo
uint8_t qrcode[] = {
    0x7F, 0x2,  0x72, 0x1D, 0xFC, 0x41, 0x5,  0x38, 0xE1, 0x4,  0x5D, 0x75, 0x73, 0x51, 0x74, 0x5D,
    0x25, 0x0,  0x35, 0x74, 0x5D, 0x4E, 0xB7, 0x99, 0x74, 0x41, 0x7C, 0x8F, 0x45, 0x4,  0x7F, 0x55,
    0x55, 0x55, 0xFC, 0x0,  0x27, 0x2E, 0x20, 0x0,  0x25, 0x46, 0xE3, 0x6E, 0xD0, 0xE,  0xBE, 0x87,
    0x91, 0x8,  0x33, 0x95, 0xC7, 0xFA, 0x60, 0x20, 0xF1, 0x9A, 0x5E, 0xF8, 0xB,  0xB,  0x93, 0x43,
    0x8C, 0x3A, 0xA7, 0x28, 0xBE, 0x50, 0x7D, 0x8B, 0x6F, 0x8D, 0x30, 0x34, 0xD2, 0xB2, 0xD5, 0x9C,
    0x73, 0xEC, 0x2C, 0x3,  0xB8, 0x78, 0xC,  0x21, 0x6D, 0xC0, 0x3,  0xEA, 0xCA, 0xCB, 0x80, 0x56,
    0x5E, 0xDE, 0x9E, 0xDC, 0x63, 0xAA, 0x3,  0xB,  0x18, 0x2,  0x1A, 0x50, 0xB8, 0x48, 0x2B, 0x8F,
    0xFD, 0x8E, 0x0,  0x28, 0x57, 0x63, 0x94, 0xB0, 0x23, 0xA7, 0x63, 0x39, 0x5C, 0x4C, 0x77, 0x7A,
    0x27, 0xF0, 0x1D, 0xA4, 0x0,  0xF6, 0xA0, 0x2,  0x4A, 0xA7, 0x91, 0x8,  0x67, 0x7D, 0xA7, 0x8F,
    0xC8, 0x0,  0x72, 0xE3, 0xBC, 0x60, 0x7F, 0x2C, 0x80, 0xE5, 0x78, 0x41, 0x30, 0x4D, 0x84, 0x5C,
    0x5D, 0x41, 0x69, 0xC7, 0xF4, 0x5D, 0x11, 0xFC, 0x9,  0x70, 0x5D, 0x2D, 0x46, 0x15, 0x88, 0x41,
    0x6B, 0x33, 0x4A, 0xD8, 0x7F, 0x1D, 0xF,  0xA8, 0x1C};
// 185 bytes length
// 40 * 37 * 8 = 1480

const byte rxPin = 16;
const byte txPin = 17;
const byte dtrPin = 27;  // optional
const byte rsePin = 4;   // direction of transmission, max3485

HardwareSerial mySerial(1);
Tprinter myPrinter(&mySerial, 9600);

void setup() {
  micros();
  mySerial.begin(9600, SERIAL_8N1, rxPin, txPin);

  pinMode(rsePin, OUTPUT);     // optional
  digitalWrite(rsePin, HIGH);  // optional

  // myPrinter.enableDtr(dtrPin, LOW);

  myPrinter.begin();
  myPrinter.setHeat(1, 224, 40);  // in begin setHeat was called with val: 0,255,0
  myPrinter.justify('C');         // only text

  myPrinter.printBitmap(qrcode, bitmapWidth, bitmapHeight);
  myPrinter.feed(1);
  myPrinter.println("orginal size");

  myPrinter.printBitmap(qrcode, bitmapWidth, bitmapHeight, 5);
  myPrinter.feed(1);
  myPrinter.println("5x bigger");

  myPrinter.printBitmap(qrcode, bitmapWidth, bitmapHeight, 0);
  myPrinter.feed(1);
  myPrinter.println("max size");

  myPrinter.printBitmap(qrcode, bitmapWidth, bitmapHeight, 1, false);
  myPrinter.feed(1);
  myPrinter.println("original size, not centered");
}
void loop() {}